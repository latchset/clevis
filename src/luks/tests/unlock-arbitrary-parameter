#!/bin/bash -ex
# vim: set ts=8 shiftwidth=4 softtabstop=4 expandtab smarttab colorcolumn=80:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

TEST=$(basename "${0}")
. luks-common-test-functions

. clevis-luks-common-functions

on_exit() {
    [ ! -d "${TMP}" ] && return 0
    tang_stop "${TMP}"
    rm -rf "${TMP}"
}

trap 'on_exit' EXIT
trap 'on_exit' ERR

TMP="$(mktemp -d)"

tang_run "${TMP}"
port=$(tang_get_port "${TMP}")

url="http://localhost:${port}"
adv="${TMP}/adv"
tang_get_adv "${port}" "${adv}"

cfg=$(printf '{"url":"%s","adv":"%s"}' "$url" "$adv")

DEV="${TMP}/luks1-device"
new_device "luks1" "${DEV}"

if ! clevis luks bind -f -d "${DEV}" tang "${cfg}" <<< "${DEFAULT_PASS}"; then
    error "${TEST}: Bind should have succeeded."
fi

TESTPARAM="arbitrarytestparameter"

#set up a "cryptsetup" function, to hijack the command
cryptsetup () { 
    #need to handle "cryptsetup isLuks" from clevis-luks-unlock, among others   
    if [[ $1 == "isLuks" ]]; then
        exit 0;
    elif [[ $1 == "luksUUID" ]]; then
        echo "TESTINGLUKSUUID"
        exit 0;
    else
        echo "$*" | grep -q -- "${TESTPARAM}"
        exit $?
    fi
}
export -f cryptsetup

if ! clevis-luks-unlock -o "$TESTPARAM" -d ${DEV} -n clevis_unlock_test; then
    error "${TEST}: clevis luks unlock did not match arbitrary test parameter \"$TESTPARAM\"."
fi
