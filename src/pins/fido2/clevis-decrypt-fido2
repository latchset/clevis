#!/bin/bash

# Copyright (c) 2023 Sebastian Kussl
# Author: Sebastian Kussl
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -eu

read -r -d . hdr64
if ! hdr="$(jose fmt --quote="$hdr64" --string --b64load --object --output=-)" ; then
    echo 'JWE header corrupt' >&2
    exit 1
fi
if [ "$(jose fmt --json="$hdr" --get clevis --get pin --unquote=-)" != 'fido2' ] ; then
    echo 'JWE pin mismatch!' >&2
    exit 1
fi
if ! hmac_salt="$(jose fmt --json="$hdr" --get clevis --get fido2 --get hmac_salt --unquote=-)" ; then
    echo "JWE missing 'hmac_salt' header parameter!" >&2
    exit 1
fi

if ! rp_id="$(jose fmt --json="$hdr" --get clevis --get fido2 --get rp_id --unquote=-)" ; then
    echo "JWE missing 'rp_id' header parameter!" >&2
    exit 1
fi
if ! cred_id="$(jose fmt --json="$hdr" --get clevis --get fido2 --get cred_id --unquote=-)" ; then
    echo "JWE missing 'cred_id' header parameter!" >&2
    exit 1
fi
if ! uv="$(jose fmt --json="$hdr" --get clevis --get fido2 --get uv --unquote=-)" ; then
    echo "JWE missing 'uv' header parameter!" >&2
    exit 1
fi
if ! up="$(jose fmt --json="$hdr" --get clevis --get fido2 --get up --unquote=-)" ; then
    echo "JWE missing 'up' header parameter!" >&2
    exit 1
fi
if ! pin="$(jose fmt --json="$hdr" --get clevis --get fido2 --get pin --unquote=-)" ; then
    echo "JWE missing 'pin' header parameter!" >&2
    exit 1
fi

fido2_tokens="$(fido2-token -L)"

if [ -z "${fido2_tokens}" ]; then
  echo "Please insert your FIDO2 token." >&2
  exit 1
fi

num_tokens="$(echo "${fido2_tokens}" | wc -l)"
if ((num_tokens > 1)); then
  echo "Warning: There are multiple tokens. Will use the first one." >&2
fi

fido2_token="$(echo "${fido2_tokens}" | head -n1 | cut -d':' -f1)"

client_hash="$(dd if=/dev/urandom bs=1 count=32 status=none | base64 -w0)"

hmac="$(printf '%s\n%s\n%s\n%s\n' "${client_hash}" "${rp_id}" "${cred_id}" "${hmac_salt}" | \
  fido2-assert -G -t "uv=${uv}" -t "up=${up}" -t "pin=${pin}" -h "${fido2_token}" | \
  head -n5 | tail -n1 | base64 -d | jose b64 enc -I -)"

# use the secret in a key wrapping key
jwk='{"alg":"A256GCM", "kty":"oct"}'
jwk="$(jose fmt -j "${jwk}" -q "${hmac}" -s k -Uo-)"

( printf '%s' "$jwk$hdr64." ; cat ) | exec jose jwe dec --key=- --input=-
