#!/bin/bash
set -euo pipefail

SUMMARY="Unlock a ZFS dataset using the saved clevis data"

function usage() {
	cat >&2 <<-USAGE_END
		Usage: clevis zfs unlock [-n] [-k KEY] -d DATASET PIN CFG

		$SUMMARY:

		  -t          Test the clevis configuration without unlocking
		  -d DATASET  The zfs dataset to unlock
		  -l LABEL    Use only this label to unlock (defaults to trying all labels)

	USAGE_END
}



function main() {
	if [ $# -eq 1 ] && [ "${1:-}" == "--summary" ]; then
		echo "$SUMMARY"
		exit 0
	fi

	local dataset
	local test_only=''
	local label=''
	while getopts ":d:l:t" o; do
		case "$o" in
		d) dataset="$OPTARG" ;;
		t) test_only=' (test)' ;;
		l) label="$OPTARG" ;;
		*) error "unrecognized argument: -${OPTARG}" ;;
		esac
	done

	if [ -z "${dataset:-""}" ]; then
		error "did not specify a device!"
	fi

	if ! zfs_is_bound "${dataset}"; then
		error "dataset is not bound with clevis: ${dataset}"
	fi

	if [[ -n "${label}" ]]; then
		label="$(zfs_get_label "${dataset}" "${label}" )"
		testing -n "unlocking ${dataset} with ${label} ${test_only}... "
		if unlock_with_label "${dataset}" "${label}" "${test_only}"; then
			testing 'ok'
			exit 0
		else
			testing 'failed'
			exit 1
		fi
	else
		local labels
		labels="$(zfs_get_labels "${dataset}")"
		for label in ${labels}; do
			testing -n "unlocking ${dataset} with ${label} ${test_only}... "
			if unlock_with_label "${dataset}" "${label}" "${test_only}"; then
				testing 'ok'
				[[ -z "${test_only}" ]] && exit 0 || true
			else
				testing "failed"
				continue
			fi
		done
	fi

	if [[ -n "${test_only}" ]]; then
		exit 0
	else
		exit 1
	fi
}


function testing() {
	[[ -n "${test_only}" ]] && echo >&2 "${@}" || true
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
	. clevis-zfs-common
	main "${@}"
fi
